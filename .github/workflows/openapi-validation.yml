name: Check OpenAPI schema

on:
  push:

env:
  DJANGO_DIR: src/backend
  SOURCE_CODE_DIR: src
  CI_GENERATED_FILE_PATH: openapi-ci-generated.yaml
  REPO_GENERATED_FILE_PATH: docs/api/openapi-generated.yaml
  PYTHON_VERSION: "3.12"

jobs:
  verify-openapi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Validate paths
        run: |
          if [ ! -d "${{ env.DJANGO_DIR }}" ]; then
            echo "Django directory not found at ${{ env.DJANGO_DIR }}"
            exit 1
          fi
          if [ ! -f "${{ env.REPO_GENERATED_FILE_PATH }}" ]; then
            echo "OpenAPI schema not found at ${{ env.REPO_GENERATED_FILE_PATH }}"
            exit 1
          fi

      - name: Install dependencies
        working-directory: ${{ env.DJANGO_DIR }}
        run: uv sync

      - name: Copy default .env file
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: |
          cp .env.sample .env

      - name: Regenerate OpenAPI schema
        working-directory: ${{ env.DJANGO_DIR }}
        run: |
          uv run python manage.py spectacular --file ${{ env.CI_GENERATED_FILE_PATH }}

      - name: Check diff with repo
        run: |
          if ! diff -u "${{ env.DJANGO_DIR }}/${{ env.CI_GENERATED_FILE_PATH }}" "${{ env.REPO_GENERATED_FILE_PATH }}"; then
            echo "OpenAPI schema mismatch."
            echo "Please regenerate the schema locally using the correct command from project README and commit the changes"
            exit 1
          else
            echo "OpenAPI schema matches - check passed successfully."
          fi
