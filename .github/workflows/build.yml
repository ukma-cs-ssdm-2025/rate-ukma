name: Docker Build
on:
  workflow_call:

env:
  SOURCE_CODE_DIR: src
  BACKEND_DIR: src/backend
  WEBAPP_DIR: src/webapp
  OPENAPI_SCHEMA_FILE: docs/api/openapi-generated.yaml

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      backend_changed: ${{ steps.filter.outputs.backend }}
      webapp_changed: ${{ steps.filter.outputs.webapp }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: filter
        with:
          filters: |
            backend:
              - '${{ env.BACKEND_DIR }}/**'
            webapp:
              - '${{ env.WEBAPP_DIR }}/**'
              - '${{ env.OPENAPI_SCHEMA_FILE }}'

  build-backend:
    needs: filter
    if: needs.filter.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Login to GitHub Container Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: docker login ghcr.io -u ${{ github.actor }} -p $GITHUB_TOKEN

      - name: Copy default .env file
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: |
          cp .env.sample .env

      - name: Extract name from docker-compose.yml
        id: extract_name
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: |
          BACKEND_IMAGE=$(yq e '.services.backend.image' docker-compose.yml)
          echo "backend_image=${BACKEND_IMAGE}" >> $GITHUB_OUTPUT
          echo "Backend image: $BACKEND_IMAGE"

      - name: Build backend
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: docker compose --profile prod build backend

      - name: Publish image
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: |
          docker push ${{ steps.extract_name.outputs.backend_image }}:latest

  build-webapp:
    needs: filter
    if: needs.filter.outputs.webapp_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Login to GitHub Container Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: docker login ghcr.io -u ${{ github.actor }} -p $GITHUB_TOKEN

      - name: Copy default .env file
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: |
          cp .env.sample .env

      - name: Extract name from docker-compose.yml
        id: extract_name
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: |
          WEBAPP_IMAGE=$(yq e '.services.webapp-build.image' docker-compose.yml)
          echo "webapp_image=${WEBAPP_IMAGE}" >> $GITHUB_OUTPUT
          echo "Webapp image: $WEBAPP_IMAGE"

      - name: Build webapp
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: docker compose --profile prod build webapp-build

      - name: Publish image
        working-directory: ${{ env.SOURCE_CODE_DIR }}
        run: docker push ${{ steps.extract_name.outputs.webapp_image }}:latest
