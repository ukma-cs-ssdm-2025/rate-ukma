openapi: 3.0.3
info:
  title: Rate UKMA API
  version: 1.0.0
  description: An API for rating UKMA courses and professors
paths:
  /api/v1/auth/login/:
    post:
      operationId: auth_login_create
      description: 'Logs in user using Django authentication flow. Version: v1.'
      summary: Django Login
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: Logged in
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
  /api/v1/auth/login/microsoft/:
    get:
      operationId: auth_login_microsoft_retrieve
      description: 'Initiates Microsoft OAuth2 authentication flow. Redirects to Microsoft
        login page for @ukma.edu.ua accounts. Backend handles session authentication
        and redirects to frontend. Version: v1.'
      summary: Microsoft OAuth Login
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '302':
          description: 'Found: Temporary Redirect'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout_create
      description: 'Logs out current user and redirects to the configured logout URL.
        Version: v1.'
      summary: Logout
      tags:
      - auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '302':
          description: 'Found: Temporary Redirect'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
  /api/v1/courses/:
    get:
      operationId: courses_list
      description: 'Returns a paginated list of courses with filters. Version: v1.'
      summary: List courses (mock)
      parameters:
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: pageSize
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - FINISHED
          - PLANNED
      - in: query
        name: type_kind
        schema:
          type: string
          enum:
          - COMPULSORY
          - ELECTIVE
      tags:
      - courses
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseListResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Forbidden:
                  value:
                    detail: You do not have permission to perform this action
                    status: 403
          description: Forbidden
  /api/v1/courses/{course_id}/:
    get:
      operationId: courses_retrieve
      description: 'Returns a single course by ID. Version: v1.'
      summary: Get course by ID (mock)
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - courses
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Forbidden:
                  value:
                    detail: You do not have permission to perform this action
                    status: 403
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
  /api/v1/courses/{course_id}/ratings/:
    get:
      operationId: course_ratings_list
      summary: List ratings for a course (mock)
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - ratings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Forbidden:
                  value:
                    detail: You do not have permission to perform this action
                    status: 403
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
    post:
      operationId: course_ratings_create
      summary: Create rating for a course (mock)
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Forbidden:
                  value:
                    detail: You do not have permission to perform this action
                    status: 403
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
  /api/v1/courses/{course_id}/ratings/{rating_id}/:
    get:
      operationId: course_rating_retrieve
      summary: Retrieve rating for a course (mock)
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: rating_id
        schema:
          type: string
        required: true
      tags:
      - ratings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Forbidden:
                  value:
                    detail: You do not have permission to perform this action
                    status: 403
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
    patch:
      operationId: course_rating_update
      summary: Update rating for a course (mock)
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: rating_id
        schema:
          type: string
        required: true
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRating'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                ValidationError:
                  value:
                    detail: Validation failed
                    status: 400
                    fields:
                      difficulty:
                      - Must be between 1 and 5.
                  summary: Validation error
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Forbidden:
                  value:
                    detail: You do not have permission to perform this action
                    status: 403
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
    delete:
      operationId: course_rating_delete
      summary: Delete rating for a course (mock)
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
        required: true
      - in: path
        name: rating_id
        schema:
          type: string
        required: true
      tags:
      - ratings
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: Deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Unauthorized:
                  value:
                    detail: Authentication credentials were not provided
                    status: 401
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                Forbidden:
                  value:
                    detail: You do not have permission to perform this action
                    status: 403
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
              examples:
                NotFound:
                  value:
                    detail: Not found
                    status: 404
                  summary: Not found
          description: Not found
components:
  schemas:
    Course:
      type: object
      description: |-
        Read serializer for Course.
        - Relateds exposed as UUIDs (no DB lookup)
        - Computed fields included as read-only
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        faculty:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
          readOnly: true
        specialities:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        avg_difficulty:
          type: number
          format: double
          readOnly: true
        avg_usefulness:
          type: number
          format: double
          readOnly: true
        ratings_count:
          type: integer
          readOnly: true
      required:
      - avg_difficulty
      - avg_usefulness
      - department
      - description
      - faculty
      - id
      - ratings_count
      - specialities
      - status
      - title
    CourseListResponse:
      type: object
      description: Schema for GET /api/v1/courses response envelope.
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        filters:
          type: object
          additionalProperties: {}
        page:
          type: integer
        page_size:
          type: integer
        total:
          type: integer
      required:
      - filters
      - page
      - page_size
      - results
      - total
    ErrorEnvelope:
      type: object
      properties:
        detail:
          type: string
        status:
          type: integer
        fields:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
      - detail
      - status
    Login:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - password
      - username
    PatchedRating:
      type: object
      description: Serializer for Rating using raw UUIDs for relations to avoid DB
        lookups.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
          readOnly: true
        course_offering:
          type: string
          format: uuid
          readOnly: true
        difficulty:
          type: integer
          maximum: 5
          minimum: 1
        usefulness:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
          nullable: true
        is_anonymous:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    Rating:
      type: object
      description: Serializer for Rating using raw UUIDs for relations to avoid DB
        lookups.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
          readOnly: true
        course_offering:
          type: string
          format: uuid
          readOnly: true
        difficulty:
          type: integer
          maximum: 5
          minimum: 1
        usefulness:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
          nullable: true
        is_anonymous:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course_offering
      - created_at
      - difficulty
      - id
      - student
      - usefulness
    StatusEnum:
      enum:
      - PLANNED
      - ACTIVE
      - FINISHED
      type: string
      description: |-
        * `PLANNED` - Planned
        * `ACTIVE` - Active
        * `FINISHED` - Finished
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
