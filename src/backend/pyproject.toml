[project]
name = "RateUKMA"
version = "0.1.0"
description = "Rate NaUKMA Courses"
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    # Core
    "django==5.2.7",
    "django-allauth==65.12.0",
    "djangorestframework>=3.14.0",
    "django-cors-headers==4.3.1",
    "django-vite==3.1.0",
    "django-reversion>=5.1.0",
    "drf-spectacular>=0.28.0",

    # Database
    "psycopg2-binary==2.9.10",

    # Security
    "cryptography>=41.0.0",
    "PyJWT==2.9.0",

    # Environment & Configuration
    "python-decouple>=3.8",
    "requests==2.32.4",

    # Logging
    "structlog>=24.2.0",

    # Production
    "gunicorn>=23.0.0",

    # Scraper
    "playwright>=1.55",
    "beautifulsoup4>=4.14",
    "lxml>=6.0",
    "filelock>=3.20",
    "pydantic>=2.12",
]

[project.optional-dependencies]
test = [
    "pytest==8.3.4",
    "pytest-django>=4.5.2",
    "coverage>=7.10.6",
    "pytest-cov==7.0.0",
    "factory-boy==3.3.3",
]
linting = ["ruff==0.9.6", "isort==5.12.0", "flake8==6.1.0"]
security = [
    "safety>=3.6.2",
    "bandit[toml]>=1.8.6",
    "bandit-sarif-formatter>=1.1.1",
]
dev = [
    "RateUKMA[test]",
    "RateUKMA[linting]",
    "RateUKMA[security]",

    # dev-only
    "pre-commit==4.3.0",
    "ipython>=9.4.0",
]

[tool.setuptools]
package-dir = { "" = "." }
packages = ["rateukma", "rating_app", "scraper"]

[tool.ruff]
src = [".", "rateukma", "rating_app", "scraper"]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # logical errors
    "I",  # imports
    "B",  # bugs-prone patterns
    "C4", # collections comprehensions
    "UP", # use more modern Python
    "N",  # naming conventions
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["rateukma", "rating_app", "scraper"]
section-order = [
    "future",
    "standard-library",
    "django",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
django = ["django", "rest_framework"]

[tool.bandit]
exclude_dirs = [
    "tests",
    "migrations",
    ".venv",
    "venv",
    "staticfiles",
    "media",
    "__pycache__",
]
# Skip hardcoded temp directory check (B108) - commonly safe in Django
skips = ["B108"]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["ALL"]

[tool.coverage.run]
source = ["rateukma", "rating_app", "scraper"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/test_*.py",
    "*_test.py",
    "*/settings/*",
    "manage.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if settings.DEBUG",
    "raise NotImplementedError",
    "if __name__ == ['\"]__main__['\"]:",
    "class .*\\bProtocol\\):",
]

[tool.pytest.ini_options]
addopts = "--cov --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml"

[[tool.uv.index]]
name = "safety"
url = "https://pkgs.safetycli.com/repository/-7bd8a/project/rate-ukma/pypi/simple/"
default = false
