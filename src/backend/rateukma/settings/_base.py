"""
Django settings for rateukma project.

Generated by 'django-admin startproject' using Django 5.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

from decouple import AutoConfig

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

config = AutoConfig(BASE_DIR)


def get_list(text: str, *, sep: str = ",") -> list[str]:
    return [item.strip() for item in text.split(sep) if item.strip()]


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DJANGO_DEBUG", default=False, cast=bool)


ALLOWED_HOSTS = get_list(str(config("ALLOWED_HOSTS", default="127.0.0.1,localhost")))

CSRF_TRUSTED_ORIGINS = get_list(str(config("CSRF_TRUSTED_ORIGINS", default="http://localhost")))
CORS_ALLOWED_ORIGINS = get_list(
    str(config("CORS_ALLOWED_ORIGINS", default="http://localhost:3000"))
)
CORS_ALLOW_CREDENTIALS = True

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "corsheaders",
    "reversion",
    "drf_spectacular",
    "rating_app",
    "scraper",
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.microsoft",
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

REST_USE_JWT = False
REST_SESSION_LOGIN = True

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = "rateukma.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "rateukma.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config("POSTGRES_DB"),
        "USER": config("POSTGRES_USER"),
        "PASSWORD": config("POSTGRES_PASSWORD"),
        "HOST": config("POSTGRES_HOST"),
        "PORT": config("POSTGRES_PORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = Path(str(config("STATIC_ROOT", default="")) or BASE_DIR / "static")

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

# Media files
# https://docs.djangoproject.com/en/5.2/ref/settings/#std-setting-MEDIA_ROOT

MEDIA_URL = "media/"
MEDIA_ROOT = Path(str(config("MEDIA_ROOT", default="")) or BASE_DIR / "media")
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# REST Framework Configuration
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 25,
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.URLPathVersioning",
    "DEFAULT_VERSION": "v1",
    "ALLOWED_VERSIONS": ["v1"],
    "EXCEPTION_HANDLER": "rating_app.exception.exception_handler.exception_handler",
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Rate UKMA API",
    "DESCRIPTION": "An API for rating UKMA courses and professors",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "SCHEMA_PATH_PREFIX": "/api/v1/",
}


# Microsoft OAuth2 settings (django-allauth)
SITE_ID = 1

SOCIALACCOUNT_PROVIDERS = {
    "microsoft": {
        "APPS": [
            {
                "client_id": config("MICROSOFT_CLIENT_ID"),
                "secret": config("MICROSOFT_CLIENT_SECRET"),
                "tenant": config("MICROSOFT_TENANT_ID", default="common"),
            }
        ],
        "SCOPE": [
            "openid",
            "email",
            "profile",
            "User.Read",
            "User.ReadBasic.All",
            "offline_access",
        ],
        "AUTH_PARAMS": {
            "prompt": "select_account",
            "access_type": "offline",
        },
        "VERIFIED_EMAIL": True,
        "ACCESS_TOKEN_METHOD": "POST",
    }
}

# Allow registration through Microsoft OAuth only
ACCOUNT_ALLOW_REGISTRATION = True

# Security note: GET-based login is enabled for Microsoft OAuth flow
# This is a security trade-off that:
# 1. Relies on Microsoft's OAuth state parameter for CSRF protection
# 2. Requires strict referrer validation
# 3. Only works with trusted Microsoft domains
SOCIALACCOUNT_LOGIN_ON_GET = True

# Allauth security settings
SOCIALACCOUNT_STATE_REQUIRED = True
SOCIALACCOUNT_STORE_TOKENS = False

SOCIALACCOUNT_ADAPTER = "rating_app.auth.microsoft_account_adapters.MicrosoftSocialAccountAdapter"
ACCOUNT_ADAPTER = "rating_app.auth.microsoft_account_adapters.MicrosoftAccountAdapter"

LOGIN_URL = "/accounts/login/"
LOGIN_REDIRECT_URL = config("LOGIN_REDIRECT_URL", default="/")
LOGIN_ERROR_URL = config("LOGIN_ERROR_URL", default="/")
ACCOUNT_LOGOUT_REDIRECT_URL = config("LOGOUT_REDIRECT_URL", default="/")

# Scraper Settings
SCRAPER_STATE_DIR = BASE_DIR.parent / "scraper" / "state"
SCRAPER_HEADLESS = config("SCRAPER_HEADLESS", default=True, cast=bool)
SCRAPER_CONCURRENCY = config("SCRAPER_CONCURRENCY", default=4, cast=int)
SCRAPER_AUTO_LOGIN = config("SCRAPER_AUTO_LOGIN", default=True, cast=bool)
SCRAPER_SLOWMO = config("SCRAPER_SLOWMO", default=0, cast=int)

# Scraper authentication
SAZ_EMAIL = config("SAZ_EMAIL", default="")
SAZ_PASSWORD = config("SAZ_PASSWORD", default="")

# Base URL for parsing
PARSE_BASE_URL = "https://my.ukma.edu.ua"
