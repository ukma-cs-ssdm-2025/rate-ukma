# Generated by Django 5.2.3 on 2025-10-14 06:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PLANNED", "Planned"),
                            ("ACTIVE", "Active"),
                            ("FINISHED", "Finished"),
                        ],
                        max_length=16,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
            },
        ),
        migrations.CreateModel(
            name="Faculty",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Faculty",
                "verbose_name_plural": "Faculties",
            },
        ),
        migrations.CreateModel(
            name="Instructor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=120)),
                ("patronymic", models.CharField(blank=True, max_length=120, null=True)),
                ("last_name", models.CharField(max_length=120)),
                (
                    "academic_degree",
                    models.CharField(
                        blank=True,
                        choices=[("PHD", "PhD"), ("DRSCI", "DoctorOfSciences")],
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "academic_title",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ASSISTANT", "Assistant"),
                            ("LECTURER", "Lecturer"),
                            ("SENIOR_LECTURER", "SeniorLecturer"),
                            ("ASSOCIATE_PROF", "AssociateProfessor"),
                            ("PROFESSOR", "Professor"),
                        ],
                        max_length=32,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CourseOffering",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=6,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(6),
                            django.core.validators.MaxLengthValidator(6),
                        ],
                    ),
                ),
                ("credits", models.DecimalField(decimal_places=1, max_digits=3)),
                ("weekly_hours", models.PositiveIntegerField()),
                ("lecture_count", models.PositiveIntegerField(blank=True, null=True)),
                ("practice_count", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "practice_type",
                    models.CharField(
                        blank=True,
                        choices=[("PRACTICE", "Practice"), ("SEMINAR", "Seminar")],
                        max_length=16,
                        null=True,
                    ),
                ),
                (
                    "exam_type",
                    models.CharField(
                        choices=[("EXAM", "Exam"), ("CREDIT", "Credit")], max_length=8
                    ),
                ),
                ("max_students", models.PositiveIntegerField(blank=True, null=True)),
                ("max_groups", models.PositiveIntegerField(blank=True, null=True)),
                ("group_size_min", models.PositiveIntegerField(blank=True, null=True)),
                ("group_size_max", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offerings",
                        to="rating_app.course",
                    ),
                ),
            ],
            options={
                "ordering": ["-semester__year", "-semester__term", "course__title"],
            },
        ),
        migrations.CreateModel(
            name="CourseInstructor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("LECTURE_INSTRUCTOR", "LectureInstructor"),
                            ("PRACTICUM_INSTRUCTOR", "PracticumInstructor"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "course_offering",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instructor_assignments",
                        to="rating_app.courseoffering",
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="rating_app.instructor",
                    ),
                ),
            ],
            options={
                "unique_together": {("instructor", "course_offering", "role")},
            },
        ),
        migrations.AddField(
            model_name="course",
            name="department",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="courses",
                to="rating_app.department",
            ),
        ),
        migrations.AddField(
            model_name="department",
            name="faculty",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="departments",
                to="rating_app.faculty",
            ),
        ),
        migrations.AddField(
            model_name="courseoffering",
            name="instructors",
            field=models.ManyToManyField(
                related_name="course_offerings",
                through="rating_app.CourseInstructor",
                to="rating_app.instructor",
            ),
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("year", models.IntegerField()),
                (
                    "term",
                    models.CharField(
                        choices=[
                            ("FALL", "Fall"),
                            ("SPRING", "Spring"),
                            ("SUMMER", "Summer"),
                        ],
                        max_length=8,
                    ),
                ),
            ],
            options={
                "ordering": ["-year", "-term"],
                "unique_together": {("year", "term")},
            },
        ),
        migrations.AddField(
            model_name="courseoffering",
            name="semester",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="offerings",
                to="rating_app.semester",
            ),
        ),
        migrations.CreateModel(
            name="Speciality",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "faculty",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="specialities",
                        to="rating_app.faculty",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CourseSpeciality",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type_kind",
                    models.CharField(
                        choices=[
                            ("COMPULSORY", "Compulsory"),
                            ("ELECTIVE", "Elective"),
                            ("PROF_ORIENTED", "ProfOriented"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_specialities",
                        to="rating_app.course",
                    ),
                ),
                (
                    "speciality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_specialities",
                        to="rating_app.speciality",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="specialities",
            field=models.ManyToManyField(
                related_name="courses",
                through="rating_app.CourseSpeciality",
                to="rating_app.speciality",
            ),
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=120)),
                ("patronymic", models.CharField(blank=True, max_length=120, null=True)),
                ("last_name", models.CharField(max_length=120)),
                (
                    "education_level",
                    models.CharField(
                        choices=[("BACHELOR", "Bachelor"), ("MASTER", "Master")],
                        max_length=16,
                    ),
                ),
                (
                    "speciality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="students",
                        to="rating_app.speciality",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "difficulty",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "usefulness",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_anonymous", models.BooleanField(default=False)),
                (
                    "course_offering",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="rating_app.courseoffering",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="rating_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ENROLLED", "Enrolled"),
                            ("DROPPED", "Dropped"),
                            ("FORCED", "Forced"),
                        ],
                        max_length=16,
                    ),
                ),
                ("enrolled_at", models.DateTimeField(auto_now_add=True)),
                (
                    "offering",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="rating_app.courseoffering",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="rating_app.student",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="courseoffering",
            constraint=models.CheckConstraint(
                condition=models.Q(("credits__gt", 0)), name="co_credits_gt_0"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="coursespeciality",
            unique_together={("course", "speciality")},
        ),
        migrations.AddIndex(
            model_name="rating",
            index=models.Index(
                fields=["course_offering"], name="rating_app__course__a290d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rating",
            index=models.Index(
                fields=["student", "course_offering"],
                name="rating_app__student_a5ef03_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="rating",
            constraint=models.CheckConstraint(
                condition=models.Q(("difficulty__gte", 1), ("difficulty__lte", 5)),
                name="rating_difficulty_1_5",
            ),
        ),
        migrations.AddConstraint(
            model_name="rating",
            constraint=models.CheckConstraint(
                condition=models.Q(("usefulness__gte", 1), ("usefulness__lte", 5)),
                name="rating_usefulness_1_5",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rating",
            unique_together={("student", "course_offering")},
        ),
        migrations.AddIndex(
            model_name="enrollment",
            index=models.Index(
                fields=["student", "offering"], name="rating_app__student_d7a609_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="enrollment",
            unique_together={("student", "offering")},
        ),
    ]
